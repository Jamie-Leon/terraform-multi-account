name: Terraform Deployment after push

on:
  push:
    branches:
    - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-2

jobs:
  merged:
    name: Dev Deployment
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.9

      - name: Run terraform fmt check
        id: fmt
        run: terraform fmt -check -diff -recursive

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::847175655404:role/TerraformUser
          role-session-name: InfraDeployOnMerge

      - name: Initialize Terraform
        id: init
        run: |
          rm -rf .terraform.*
          terraform init -input=false

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          ENV=Dev make plan \
          && terraform show Dev.plan
        continue-on-error: false

      # - name: Apply Terraform
      #   if: steps.plan.outcome == 'success'
      #   id: apply
      #   continue-on-error: false
      #   run: |
      #     ENV=Dev make apply

    name: Prod Deployment
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.9

      - name: Run terraform fmt check
        id: fmt
        run: terraform fmt -check -diff -recursive

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::847175655404:role/TerraformUser
          role-session-name: InfraDeployOnMerge

      - name: Initialize Terraform
        id: init
        run: |
          rm -rf .terraform.*
          terraform init -input=false

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          ENV=Prod make plan \
          && terraform show Prod.plan
        continue-on-error: false

      # - name: Apply Terraform
      #   if: steps.plan.outcome == 'success'
      #   id: apply
      #   continue-on-error: false
      #   run: |
      #     ENV=Dev make apply