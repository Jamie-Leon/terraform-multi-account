name: Branch

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-2

jobs:
  Lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    steps:
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Run terraform fmt check
        id: fmt
        run: terraform fmt -check -diff -recursive

  DevBuild:
    name: Dev Build
    runs-on: ubuntu-latest
    # environment:
    #   name: Development
    needs: Lint
    steps:
      - name: Check out code
        uses: actions/checkout@v3.3.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.3.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::847175655404:role/TerraformUser
          role-session-name: InfraDeployOnMerge

      - name: Initialize Terraform
        id: init
        run: |
          rm -rf .terraform.*
          terraform init -input=false

      - name: Terraform Plan
        id: plan
        run: |
          ENV=Dev make plan -out Dev.plan
        continue-on-error: false

      - name: Upload Dev TF plan
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Dev.plan
          path: Dev.plan
          retention-days: 1

  ProdBuild:
    name: Prod Build
    runs-on: ubuntu-latest
    needs: Lint
    # environment:
    #   name: Production
    steps:
      - name: Check out code
        uses: actions/checkout@v3.3.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.3.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::847175655404:role/TerraformUser
          role-session-name: InfraDeployOnMerge

      - name: Initialize Terraform
        id: init
        run: |
          rm -rf .terraform.*
          terraform init -input=false

      - name: Terraform Plan - Production
        id: plan
        run: |
          ENV=Prod make plan -out Prod.plan
        continue-on-error: false

      - name: Upload Prod TF plan
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Prod.plan
          path: Prod.plan
          retention-days: 1

      # - name: Terraform Deploy - Production
      #   id: deploy
      #   run: |
      #     ENV=Prod make apply \
      #     && terraform show Prod.plan
      #   continue-on-error: false
